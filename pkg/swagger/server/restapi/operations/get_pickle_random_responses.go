// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"io"
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetPickleRandomOKCode is the HTTP code returned for type GetPickleRandomOK
const GetPickleRandomOKCode int = 200

/*GetPickleRandomOK Returns a random pickle rick.

swagger:response getPickleRandomOK
*/
type GetPickleRandomOK struct {

	/*
	  In: Body
	*/
	Payload io.ReadCloser `json:"body,omitempty"`
}

// NewGetPickleRandomOK creates GetPickleRandomOK with default headers values
func NewGetPickleRandomOK() *GetPickleRandomOK {

	return &GetPickleRandomOK{}
}

// WithPayload adds the payload to the get pickle random o k response
func (o *GetPickleRandomOK) WithPayload(payload io.ReadCloser) *GetPickleRandomOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get pickle random o k response
func (o *GetPickleRandomOK) SetPayload(payload io.ReadCloser) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPickleRandomOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetPickleRandomBadRequestCode is the HTTP code returned for type GetPickleRandomBadRequest
const GetPickleRandomBadRequestCode int = 400

/*GetPickleRandomBadRequest there is something wrong in the path

swagger:response getPickleRandomBadRequest
*/
type GetPickleRandomBadRequest struct {
}

// NewGetPickleRandomBadRequest creates GetPickleRandomBadRequest with default headers values
func NewGetPickleRandomBadRequest() *GetPickleRandomBadRequest {

	return &GetPickleRandomBadRequest{}
}

// WriteResponse to the client
func (o *GetPickleRandomBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}
